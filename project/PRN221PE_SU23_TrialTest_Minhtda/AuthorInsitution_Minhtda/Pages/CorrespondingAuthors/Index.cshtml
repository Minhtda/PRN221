@page
@model AuthorInsitution_Minhtda.Pages.CorrespondingAuthors.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>CorrespondingAuthor</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Author name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            Find by Skill:
            <input type="text" name="SearchStringSkill" value="@Model.CurrentFilterSkill" />
            <input type="submit" value="Search" class="btn btn-primary" />
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CorrespondingAuthors[0].AuthorName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CorrespondingAuthors[0].AuthorBirthday)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CorrespondingAuthors[0].Bio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CorrespondingAuthors[0].Skills)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CorrespondingAuthors[0].Institution)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.CorrespondingAuthors)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AuthorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AuthorBirthday)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Bio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Skills)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Institution.InstitutionName)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.AuthorId">Edit</a> |
                <a asp-page="./Delete" asp-route-id="@item.AuthorId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.CorrespondingAuthors.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.CorrespondingAuthors.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-pageIndex="@(Model.CorrespondingAuthors.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-pageIndex="@(Model.CorrespondingAuthors.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>